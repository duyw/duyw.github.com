<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 数据库 | 杜永文 博客]]></title>
  <link href="http://duyw.github.io/blog/categories/database/atom.xml" rel="self"/>
  <link href="http://duyw.github.io/"/>
  <updated>2014-02-25T16:17:14+08:00</updated>
  <id>http://duyw.github.io/</id>
  <author>
    <name><![CDATA[Du Yongwen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PostgreSQL 常用函数]]></title>
    <link href="http://duyw.github.io/blog/2014/01/29/postgresql-chang-yong-han-shu/"/>
    <updated>2014-01-29T00:09:00+08:00</updated>
    <id>http://duyw.github.io/blog/2014/01/29/postgresql-chang-yong-han-shu</id>
    <content type="html"><![CDATA[<h3>一 常用数学操作符</h3>

<pre><code>%    模      5 % 4      1
^    幂      2.0 ^ 3.0  8
|/   平方根  |/ 25.0     5
||/  立方根  ||/ 27.0    3
!    阶乘    5 !        120
!!   阶乘    !! 5       120
@    绝对值   @ -5.0     5
</code></pre>

<h3>二 常用数学函数</h3>

<p>取绝对值： <code>abs()</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">abs</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">);</span> <span class="c1">-- 5</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>求余数： <code>mod(x,y)</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">mod</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">);</span> <span class="c1">--1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>平方根： <code>sqrt()</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">sqrt</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span> <span class="c1">-- 2</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>立方根： <code>cbrt()</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">cbrt</span><span class="p">(</span><span class="mi">8</span><span class="p">);</span> <span class="c1">--2</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>随机数： <code>random()</code>, 0.0 到 1.0 之间
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">random</span><span class="p">();</span> <span class="c1">-- 0.527410356327891</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>不小于参数的最小的整数： <code>cell()</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">cell</span><span class="p">(</span><span class="o">-</span><span class="mi">42</span><span class="p">.</span><span class="mi">8</span><span class="p">);</span> <span class="c1">-- -42</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>不大于参数的最大整数: <code>floor()</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">floor</span><span class="p">(</span><span class="o">-</span><span class="mi">42</span><span class="p">.</span><span class="mi">8</span><span class="p">);</span> <span class="c1">-- -43`</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>三 字符串函数</h3>

<p>字符串连接： <code>string || string</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="s1">&#39;ruby&#39;</span> <span class="o">||</span> <span class="s1">&#39;china&#39;</span> <span class="p">;</span> <span class="c1">-- rubychina</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!-- more -->


<p>字符串长度： <code>length()</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">length</span><span class="p">(</span><span class="s1">&#39;i love you&#39;</span><span class="p">)</span> <span class="p">;</span> <span class="c1">-- 10</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>字符串转小写： <code>lower()</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">lower</span><span class="p">(</span><span class="s1">&#39;RUBY&#39;</span><span class="p">);</span> <span class="c1">-- ruby</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>字符串转大写： <code>upper()</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">upper</span><span class="p">(</span><span class="s1">&#39;rails&#39;</span><span class="p">);</span> <span class="c1">-- RAILS</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>字符串每个单词的第一个子母转为大写： <code>initcap()</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">initcap</span><span class="p">(</span><span class="s1">&#39;ruby on rails&#39;</span><span class="p">);</span> <span class="c1">-- Ruby on Rails</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>字符串替换： <code>overlay(string placing string from int [for int])</code> 和</p>

<p><code>replace(string text, from text, to text)</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">overlay</span><span class="p">(</span><span class="s1">&#39;Ruby&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;Rails&#39;</span> <span class="k">placing</span> <span class="s1">&#39; on &#39;</span> <span class="k">from</span> <span class="mi">5</span> <span class="k">for</span> <span class="mi">7</span><span class="p">)</span><span class="err">；</span><span class="c1">-- Ruby on Rails</span>
</span><span class='line'><span class="k">select</span> <span class="k">replace</span><span class="p">(</span><span class="s1">&#39;Ruby&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;Rails&#39;</span><span class="p">,</span> <span class="s1">&#39;_______&#39;</span><span class="p">,</span> <span class="s1">&#39; on &#39;</span><span class="p">);</span> <span class="c1">-- Ruby on Rails`</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>截取字符串： <code>substring(string [from int] [for int])</code> 和 <code>substr(string, from [, count])</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">substring</span><span class="p">(</span><span class="s1">&#39;Ruby on Rails&#39;</span> <span class="k">from</span> <span class="mi">1</span> <span class="k">for</span> <span class="mi">4</span><span class="p">);</span> <span class="c1">-- Ruby</span>
</span><span class='line'><span class="k">select</span> <span class="k">substring</span><span class="p">(</span><span class="s1">&#39;Ruby on Rails&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>        <span class="c1">-- Ruby</span>
</span><span class='line'><span class="k">select</span> <span class="n">substr</span><span class="p">(</span><span class="s1">&#39;Ruby on Rails&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>           <span class="c1">-- Ruby</span>
</span><span class='line'><span class="k">select</span> <span class="n">substr</span><span class="p">(</span><span class="s1">&#39;Ruby on Rails&#39;</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>              <span class="c1">-- on Rails</span>
</span><span class='line'><span class="k">select</span> <span class="k">substring</span><span class="p">(</span><span class="s1">&#39;foobar&#39;</span> <span class="k">from</span> <span class="s1">&#39;%#&quot;o_b#&quot;%&#39;</span> <span class="k">FOR</span> <span class="s1">&#39;#&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">-- oob  (这里#是转义符，双引号内的模式是返回部分)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>子字符串位置 <code>position(substring in string)</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">position</span><span class="p">(</span><span class="s1">&#39;ruby-china&#39;</span><span class="p">,</span><span class="s1">&#39;-&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">-- 5 (利用这个特性可以用于判断字符串中是否包含某个子字符串)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>去除首位空格：<code>trim(string)</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">trim</span><span class="p">(</span><span class="s1">&#39;    ruby    &#39;</span><span class="p">);</span>  <span class="c1">-- &#39;ruby&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>去除左边空格/字符： <code>ltrim(string text [, characters text])</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">ltrim</span><span class="p">(</span><span class="s1">&#39;    ruby&#39;</span><span class="p">)</span> <span class="c1">-- ruby</span>
</span><span class='line'><span class="k">select</span> <span class="n">ltrim</span><span class="p">(</span><span class="s1">&#39;&lt;em&gt;_ruby&#39;</span><span class="p">,</span><span class="s1">&#39;&lt;/em&gt;&#39;</span><span class="p">)</span> <span class="c1">-- ruby</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>去除右边空格/字符： <code>rtrim(string text [, characters text])</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">rtrim</span><span class="p">(</span><span class="s1">&#39;ruby    &#39;</span><span class="p">)</span>    <span class="c1">-- ruby</span>
</span><span class='line'><span class="k">select</span> <span class="n">rtrim</span><span class="p">(</span><span class="s1">&#39;ruby&lt;em&gt;_&#39;</span><span class="p">,</span><span class="s1">&#39;&lt;/em&gt;&#39;</span><span class="p">)</span>  <span class="c1">-- ruby</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>获取字符串的 MD5 值：<code>md5()</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">md5</span><span class="p">(</span><span class="s1">&#39;ruby&#39;</span><span class="p">);</span> <span class="c1">-- 58e53d1324eef6265fdb97b08ed9aadf</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>字符串分割： <code>split_part(string text, delimiter text, field int)</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">split_part</span><span class="p">(</span><span class="s1">&#39;i||love||you&#39;</span><span class="p">,</span> <span class="s1">&#39;||&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">-- love</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>四 模式匹配</h3>

<h4>Like</h4>

<p>用法举例</p>

<pre><code>'abc' LIKE 'abc'    true
'abc' LIKE 'a%'     true
'abc' LIKE '_b_'    true
'abc' LIKE 'c'      false  
</code></pre>

<p>下划线(_)代表匹配任何单个字符，而一个百分号(%)匹配任何零或更多字符，如：</p>

<h4>SIMILAR TO正则表达式</h4>

<p>SIMILAR TO根据模式是否匹配给定的字符串而返回真或者假。
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">string</span> <span class="k">SIMILAR</span> <span class="k">TO</span> <span class="n">pattern</span> <span class="p">[</span><span class="k">ESCAPE</span> <span class="k">escape</span><span class="o">-</span><span class="nb">character</span><span class="p">]</span>
</span><span class='line'><span class="n">string</span> <span class="k">NOT</span> <span class="k">SIMILAR</span> <span class="k">TO</span> <span class="n">pattern</span> <span class="p">[</span><span class="k">ESCAPE</span> <span class="k">escape</span><span class="o">-</span><span class="nb">character</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>它和LIKE非常类似，支持LIKE的通配符('_'和'%')且保持其原意。除此之外，SIMILAR TO还支持一些自己独有的元字符，如：</p>

<ol>
<li><p>| 标识选择(两个候选之一)。</p></li>
<li><ul>
<li>表示重复前面的项零次或更多次。</li>
</ul>
</li>
<li><ul>
<li>表示重复前面的项一次或更多次。</li>
</ul>
</li>
<li><p>可以使用圆括弧()把项组合成一个逻辑项。</p></li>
<li><p>一个方括弧表达式[...]声明一个字符表，就像POSIX正则表达式一样。</p></li>
</ol>


<p>见如下示例：</p>

<pre><code>'abc' SIMILAR TO 'abc'            -- true
'abc' SIMILAR TO 'a'              -- false
'abc' SIMILAR TO '%(b|d)%'        -- true
'abc' SIMILAR TO '(b|c)%'         -- false
</code></pre>

<p>带三个参数的substring，substring(string from pattern for escape-character)，提供了一个从字串中抽取一个匹配SQL正则表达式模式的子字串的函数。和SIMILAR TO一样，声明的模式必须匹配整个数据串，否则函数失效并返回NULL。为了标识在成功的时候应该返回的模式部分，模式必须出现后跟双引号(")的两个转 义字符。匹配这两个标记之间的模式的字串将被返回，如：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="k">substring</span><span class="p">(</span><span class="s1">&#39;foobar&#39;</span> <span class="k">from</span> <span class="s1">&#39;%#&quot;o_b#&quot;%&#39;</span> <span class="k">FOR</span> <span class="s1">&#39;#&#39;</span><span class="p">);</span> <span class="c1">-- oob</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>用于日期/时间格式化的模式</h4>

<pre><code>模式    描述
HH     一天的小时数(01-12)
HH12   一天的小时数(01-12)
HH24   一天的小时数(00-23)
MI     分钟(00-59)
SS     秒(00-59)
MS     毫秒(000-999)
US     微秒(000000-999999)
AM     正午标识(大写)
Y,YYY  带逗号的年(4和更多位)
YYYY   年(4和更多位)
YYY    年的后三位
YY     年的后两位
Y      年的最后一位
MONTH  全长大写月份名(空白填充为9字符)
Month  全长混合大小写月份名(空白填充为9字符)
month  全长小写月份名(空白填充为9字符)
MON    大写缩写月份名(3字符)
Mon    缩写混合大小写月份名(3字符)
mon    小写缩写月份名(3字符)
MM     月份号(01-12)
DAY    全长大写日期名(空白填充为9字符)
Day    全长混合大小写日期名(空白填充为9字符)
day    全长小写日期名(空白填充为9字符)
DY     缩写大写日期名(3字符)
Dy     缩写混合大小写日期名(3字符)
dy     缩写小写日期名(3字符)
DDD    一年里的日子(001-366)
DD     一个月里的日子(01-31)
D      一周里的日子(1-7；周日是1)
W      一个月里的周数(1-5)(第一周从该月第一天开始)
WW     一年里的周数(1-53)(第一周从该年的第一天开始)
</code></pre>

<h3>五 日期/时间函数</h3>

<p>当前时间： <code>localtime</code>, <code>localtimestamp</code>, <code>now()</code>, <code>current_time</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">localtime</span><span class="p">,</span> <span class="k">localtimestamp</span><span class="p">,</span> <span class="n">now</span><span class="p">(),</span> <span class="k">current_time</span><span class="p">;</span>
</span><span class='line'><span class="c1">--00:06:12.109832 | 2014-01-29 00:06:12.109832 | 2014-01-29 00:06:12.109832+08 | 00:06:12.109832+08</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>当前日期： <code>current_date</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">current_date</span><span class="p">;</span> <span class="c1">-- 2014-01-28</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>当前日期和时间： <code>current_timestamp</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">current_timestamp</span><span class="p">;</span> <span class="c1">-- 2014-01-28 23:40:14.761216+08</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>获取子域： <code>date_part(text, timestamp)</code>, 等同于 <code>extract(field from timestamp)</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">date_part</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">,</span>   <span class="k">timestamp</span><span class="s1">&#39;2014-01-28 23:40:14.761216+08&#39;</span><span class="p">);</span> <span class="c1">-- 2014</span>
</span><span class='line'><span class="k">select</span> <span class="n">date_part</span><span class="p">(</span><span class="s1">&#39;month&#39;</span><span class="p">,</span>  <span class="k">timestamp</span><span class="s1">&#39;2014-01-28 23:40:14.761216+08&#39;</span><span class="p">);</span> <span class="c1">-- 1</span>
</span><span class='line'><span class="k">select</span> <span class="n">date_part</span><span class="p">(</span><span class="s1">&#39;day&#39;</span><span class="p">,</span>    <span class="k">timestamp</span><span class="s1">&#39;2014-01-28 23:40:14.761216+08&#39;</span><span class="p">);</span> <span class="c1">-- 28</span>
</span><span class='line'><span class="k">select</span> <span class="n">date_part</span><span class="p">(</span><span class="s1">&#39;week&#39;</span><span class="p">,</span>   <span class="k">timestamp</span><span class="s1">&#39;2014-01-28 23:40:14.761216+08&#39;</span><span class="p">);</span> <span class="c1">-- 5</span>
</span><span class='line'><span class="k">select</span> <span class="n">date_part</span><span class="p">(</span><span class="s1">&#39;hour&#39;</span><span class="p">,</span>   <span class="k">timestamp</span><span class="s1">&#39;2014-01-28 23:40:14.761216+08&#39;</span><span class="p">);</span> <span class="c1">-- 23</span>
</span><span class='line'><span class="k">select</span> <span class="n">date_part</span><span class="p">(</span><span class="s1">&#39;minute&#39;</span><span class="p">,</span> <span class="k">timestamp</span><span class="s1">&#39;2014-01-28 23:40:14.761216+08&#39;</span><span class="p">);</span> <span class="c1">-- 40</span>
</span><span class='line'><span class="k">select</span> <span class="n">date_part</span><span class="p">(</span><span class="s1">&#39;second&#39;</span><span class="p">,</span> <span class="k">timestamp</span><span class="s1">&#39;2014-01-28 23:40:14.761216+08&#39;</span><span class="p">);</span> <span class="c1">-- 14.761216&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">select</span> <span class="k">extract</span><span class="p">(</span><span class="k">year</span> <span class="k">from</span> <span class="k">timestamp</span> <span class="s1">&#39;2014-01-28 23:40:14.761216+08&#39;</span><span class="p">);</span>  <span class="c1">-- 2014</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>截断成指定的精度: <code>date_trunc(text, timestamp)</code>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">date_trunc</span><span class="p">(</span><span class="s1">&#39;hour&#39;</span><span class="p">,</span> <span class="k">timestamp</span> <span class="s1">&#39;2014-01-28 23:40:14.761216+08&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">-- 2014-01-28 23:00:00</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Tips</h3>

<hr />

<p>1 BETWEEN</p>

<p><code>a BETWEEN x AND y</code> 等效于 <code>a &gt;= x AND a &lt;= y</code></p>

<p><code>a NOT BETWEEN x AND y</code> 等效于 <code>a &lt; x OR a &gt; y</code></p>

<p>2 拼接多条记录的值</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">array_to_string</span><span class="p">(</span> <span class="nb">array</span><span class="p">(</span><span class="k">select</span> <span class="n">nickname</span> <span class="k">from</span> <span class="n">users</span> <span class="k">where</span> <span class="n">id</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">100</span><span class="p">),</span> <span class="s1">&#39;;&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>3 string_agg
聚合函数，用于将字段拼接成字符串,相当于对string进行sum
例如：  users表有如下纪录：</p>

<table>
<thead>
<tr>
<th> id  </th>
<th> area_name   </th>
</tr>
</thead>
<tbody>
<tr>
<td>  1  </td>
<td>    北京    </td>
</tr>
<tr>
<td>  1  </td>
<td>    河南    </td>
</tr>
<tr>
<td>  2  </td>
<td>    河南    </td>
</tr>
</tbody>
</table>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">id</span><span class="p">,</span> <span class="n">string_agg</span><span class="p">(</span><span class="n">area_name</span><span class="p">,</span> <span class="s1">&#39;;&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">area_names</span>
</span><span class='line'><span class="k">from</span> <span class="n">users</span> <span class="k">group</span> <span class="k">by</span> <span class="n">id</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>结果：</p>

<table>
<thead>
<tr>
<th> id  </th>
<th> area_name   </th>
</tr>
</thead>
<tbody>
<tr>
<td>  1  </td>
<td>  北京;河南    </td>
</tr>
<tr>
<td>  2  </td>
<td>  河南   </td>
</tr>
</tbody>
</table>


<p>再例如：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">parent_area_code</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>   <span class="n">string_agg</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="s1">&#39;;&#39;</span><span class="p">),</span>
</span><span class='line'>   <span class="n">string_agg</span><span class="p">(</span><span class="n">name</span> <span class="o">||</span> <span class="s1">&#39;_&#39;</span> <span class="o">||</span> <span class="n">area_code</span> <span class="p">,</span> <span class="s1">&#39;;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">from</span> <span class="n">locations</span> <span class="k">where</span> <span class="n">parent_area_code</span> <span class="k">is</span> <span class="k">not</span> <span class="k">null</span>
</span><span class='line'><span class="k">group</span> <span class="k">by</span> <span class="n">parent_area_code</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>4 array_agg  列转数组</p>

<p>上例也可以用 array_agg + array_to_string 间接实现：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">id</span><span class="p">,</span> <span class="n">array_to_string</span><span class="p">(</span><span class="n">array_agg</span><span class="p">(</span><span class="n">area_name</span><span class="p">),</span> <span class="s1">&#39;;&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">area_names</span>
</span><span class='line'><span class="k">from</span> <span class="n">users</span> <span class="k">group</span> <span class="k">by</span> <span class="n">id</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PostgreSQL 字段分割分组]]></title>
    <link href="http://duyw.github.io/blog/2014/01/28/postgresql-zi-duan-fen-ge-fen-zu/"/>
    <updated>2014-01-28T20:43:00+08:00</updated>
    <id>http://duyw.github.io/blog/2014/01/28/postgresql-zi-duan-fen-ge-fen-zu</id>
    <content type="html"><![CDATA[<p>原始： 在import_products中的location_prices字段存储内容：</p>

<pre><code> id  | location_prices  
-----|---------------------
  1  | 北京:200.0;河南:100.0
  2  | 河南;100.0
</code></pre>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">id</span> <span class="p">,</span>
</span><span class='line'>  <span class="n">split_part</span><span class="p">(</span><span class="k">unnest</span><span class="p">(</span><span class="n">string_to_array</span><span class="p">(</span><span class="n">location_prices</span><span class="p">,</span><span class="s1">&#39;;&#39;</span><span class="p">)),</span><span class="s1">&#39;:&#39;</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="n">area_name</span><span class="p">,</span>
</span><span class='line'>  <span class="n">split_part</span><span class="p">(</span><span class="k">unnest</span><span class="p">(</span><span class="n">string_to_array</span><span class="p">(</span><span class="n">location_prices</span><span class="p">,</span><span class="s1">&#39;;&#39;</span><span class="p">)),</span><span class="s1">&#39;:&#39;</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="n">price</span>
</span><span class='line'><span class="k">from</span> <span class="n">import_products</span>
</span><span class='line'><span class="k">where</span> <span class="n">id</span> <span class="k">in</span> <span class="p">(</span><span class="mi">542796</span><span class="p">,</span><span class="mi">542797</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>结果：</p>

<pre><code> id  | area_name | price  
-----|-----------|-------
  1  |    北京    | 200.0
  1  |    河南    | 100.0
  2  |    河南    | 100.0
</code></pre>

<p>知识点：</p>

<h3>1. string_to_array</h3>

<p>string_to_array函数的作用是将string类型的字符串分割成数组。
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">string_to_array</span><span class="p">(</span><span class="s1">&#39;i|love|you&#39;</span><span class="p">,</span><span class="s1">&#39;|&#39;</span><span class="p">)</span> <span class="p">;</span>  <span class="c1">-- {i,love,you}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>2. unnest</h3>

<p>unnest 函数的作用是将数组转换成行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">unnest</span><span class="p">(</span><span class="nb">array</span><span class="p">[</span><span class="s1">&#39;i&#39;</span><span class="p">,</span><span class="s1">&#39;love&#39;</span><span class="p">,</span><span class="s1">&#39;you&#39;</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<pre><code>unnest  
-------
  i
 love
  you
</code></pre>

<h3>3. split_part</h3>

<p>split_part 函数作用是将字符串按照另一个字符串进行分割，并返回分隔以后的
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">split_part</span><span class="p">(</span><span class="s1">&#39;i||love||you&#39;</span><span class="p">,</span> <span class="s1">&#39;||&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span><span class="o">`</span> <span class="c1">-- love</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails中操作Sqlite3数据库速度慢的问题]]></title>
    <link href="http://duyw.github.io/blog/2014/01/28/railszhong-cao-zuo-sqlite3shu-ju-ku-su-du-man-de-wen-ti/"/>
    <updated>2014-01-28T12:58:00+08:00</updated>
    <id>http://duyw.github.io/blog/2014/01/28/railszhong-cao-zuo-sqlite3shu-ju-ku-su-du-man-de-wen-ti</id>
    <content type="html"><![CDATA[<p>项目中要将数据导出到sqlite数据库中，但是速度太慢了，无法接受：</p>

<p>```
(0.1ms)  begin transaction
/home/ivan/work/temp/packagetest/app/models/material_type.rb:7: warning: multiple values for a block parameter (0 for 1)
from /home/ivan/.rvm/gems/ruby-1.8.7-p371@rails304/gems/activerecord-3.2.13/lib/active_record/connection_adapters/abstract/database_statements.rb:192
(0.4ms)  insert into material_types(id,name,code,parent_id,created_at,updated_at) values ('40', '40_name','code', 40, 'Fri Nov 29 11:08:54 +0800 2013', 'Fri Nov 29 11:08:54 +0800 2013')
(317.6ms)  commit transaction</p>

<p>(0.1ms)  begin transaction
/home/ivan/work/temp/packagetest/app/models/material_type.rb:7: warning: multiple values for a block parameter (0 for 1)
from /home/ivan/.rvm/gems/ruby-1.8.7-p371@rails304/gems/activerecord-3.2.13/lib/active_record/connection_adapters/abstract/database_statements.rb:192
(0.4ms)  insert into material_types(id,name,code,parent_id,created_at,updated_at) values ('41', '41_name','code', 41, 'Fri Nov 29 11:08:54 +0800 2013', 'Fri Nov 29 11:08:54 +0800 2013')
(307.8ms)  commit transaction
```</p>

<p>每次最耗时的就是这个 commit transaction 了 居然要300ms左右。</p>

<p>网上查找原因：</p>

<p>SQLite 缺省为每个操作启动一个事务，所以成批插入的时候，每个插入操作都会在一个事务中执行：</p>

<p>这样的花1秒钟才能执行6个插入。如果把所有操作都放在一个事务中，速度能达到1秒几万条，完全不在一个数量级，于是寻求解决方法。</p>

<p>主要思路就是让多个插入操作在一个事务中进行，最后的解决方法是直接使用 SQLite3这个gem，而不通过active_record</p>

<p>方法介绍：</p>

<p>1 连接数据库：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@db</span> <span class="o">=</span> <span class="ss">SQLite3</span><span class="p">:</span><span class="ss">:Database</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="vi">@db_path</span><span class="p">)</span> <span class="c1"># 连接sqlite3数据库</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>2 配置
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@db</span><span class="o">.</span><span class="n">results_as_hash</span> <span class="o">=</span> <span class="kp">true</span><span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>该项默认为false， 设置成true以后返回的结果集是hash结构的，以字段名称作为key，方便读取数据，否则返回一个数组。</p>

<p>3 执行SQL 语句：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="s2">&quot;insert into option (release_time, package_type, id, db_name, db_id) ...&quot;</span>
</span><span class='line'><span class="vi">@db</span><span class="o">.</span><span class="n">execute</span> <span class="n">sql</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="s2">&quot;select * from posts where title=? and name=? &quot;</span>
</span><span class='line'><span class="vi">@db</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="s1">&#39;标题&#39;</span><span class="p">,</span><span class="s1">&#39;名称&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>4 遍历结果集
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@db</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="s1">&#39;标题&#39;</span><span class="p">,</span><span class="s1">&#39;名称&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
</span><span class='line'>  <span class="c1">#...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>注意：如果没有找到数据会抛出异常，需要自行处理一下。</p>

<p>5 在单个事务中批量操作
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@db</span><span class="o">.</span><span class="n">transaction</span>
</span><span class='line'><span class="mi">100</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="vi">@db</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;insert into post where name = &#39;name_</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&#39; &quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="vi">@db</span><span class="o">.</span><span class="n">commit</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
或者
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@db</span><span class="o">.</span><span class="n">transaction</span> <span class="k">do</span>
</span><span class='line'>  <span class="mi">100</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;@db.execute(&quot;insert into post where name = &#39;name_</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="sr">&#39; &quot;)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Quick Tips]]></title>
    <link href="http://duyw.github.io/blog/2013/05/02/mongodb-quick-tips/"/>
    <updated>2013-05-02T11:04:00+08:00</updated>
    <id>http://duyw.github.io/blog/2013/05/02/mongodb-quick-tips</id>
    <content type="html"><![CDATA[<h3>1. 介绍</h3>

<p>　　一个mongod服务可以有建立多个数据库，每个数据库可以有多张表，这里的表名叫collection，每个collection可以存放多个文档（document），每个文档都以BSON（binary json）的形式存放于硬盘中，因此可以存储比较复杂的数据类型。它是以单文档为单位存储的，你可以任意给一个或一批文档新增或删除字段，而不会对其它文档造成影响，这就是所谓的schema-free，这也是文档型数据库最主要的优点。跟一般的key-value数据库不一样的是，它的value中存储了结构信息，所以你又可以像关系型数据库那样对某些域进行读写、统计等操作。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。Mongo还可以解决海量数据的查询效率，根据官方文档，当数据量达到50GB以上数据时，Mongo数据库访问速度是MySQL10 倍以上。</p>

<h4>BSON</h4>

<p>　　BSON是Binary JSON 的简称，是一个JSON文档对象的二进制编码格式。BSON同JSON一样支持往其它文档对象和数组中再插入文档对象和数组，同时扩展了JSON的数据类型。如：BSON有Date类型和BinDate类型。</p>

<p>　　BSON被比作二进制的交换格式，如同Protocol Buffers，但BSON比它更“schema-less”，非常好的灵活性但空间占用稍微大一点。</p>

<p>BSON有以下三个特点：</p>

<p>1． 轻量级</p>

<p>2． 跨平台</p>

<p>3． 效率高</p>

<h4>命名空间</h4>

<p>　　MongoDB存储BSON对象到collections,这一系列的数据库名和collection名被称为一个命名空间。如同：java.util.List;用来管理数据库中的数据。</p>

<h4>索引</h4>

<p>　　mongodb可以对某个字段建立索引，可以建立组合索引、唯一索引，也可以删除索引，建立索引就意味着增加空间开销。默认情况下每个表都会有一个唯一索引：<em>id，如果插入数据时没有指定</em>id，服务会自动生成一个<em>id，为了充分利用已有索引，减少空间开销，最好是自己指定一个unique的key为</em>id，通常用对象的ID比较合适，比如商品的ID。</p>

<!-- more -->


<h3>2. 安装</h3>

<p>Linux系统下有两种安装方式:</p>

<h4>第一种：下载二进制包，然后解压到相应目录即可。</h4>

<ol>
<li><p>直接到<a href="http://www.mongodb.org/downloads">官网</a>下载二进制包，下载以后是一个tgz文件。</p>

<p> <code>curl http://downloads.mongodb.org/linux/mongodb-linux-i686-2.4.3.tgz &gt; mongodb.tgz</code></p></li>
<li><p>将文件解压到指定目录</p>

<p><code>tar -zxvf mongodb.tgz</code></p>

<p>重命名：</p>

<p><code>cp -R -n  mongodb-linux-????-??-??/ mongodb</code></p></li>
</ol>


<p>在 mongodb/bin 目录下可以看到和MongoDB相关的一些二进制文件包括 mongod 等。</p>

<p>到此为止MongoDB已经安装完成，接下来开始使用MongoDB：</p>

<p>在第一次启动mongdod的时候，需要创建存放数据文件的目录，默认的目录是 <code>/data/db/</code></p>

<p>首先创建这个目录： <code>mkdir -p /data/db</code></p>

<blockquote><p>注意：</p>

<p>要确保运行 mongod 进程的系统用户对改目录拥有读写权限。</p>

<p>如果 mongod 运行在 mongo 用户帐号下，可以使用 <code>chown mongo /data/db</code> 命令来更改该目录的拥有者。</p></blockquote>

<p>至此，我们已经可以运行 mongod ，也可以通过 mongo 命令来链接到数据库，前提是这两个命令要在 MongoDB 的安装目录下的bin目录下执行。</p>

<p>如果要直接使用这两个命令，需要将它们添加到系统的环境变量里面去，方法是在bin目录下执行</p>

<p><code>sudo cp mongo /usr/bin/</code></p>

<p>之后就可以在任意目录使用 mongo 命令了。</p>

<p>将mongodb 加入到开机启动,</p>

<p><code>sudo gedit /etc/rc.local</code></p>

<p>编辑 rc.local 加入
```</p>

<h1>add mongonDB service</h1>

<p>rm -rf /data/mongodb_data/* &amp;&amp; /usr/local/mongodb/bin/mongod –dbpath=/data/mongodb_data/ –logpath=/data/mongodb_log/mongodb.log –logappend&amp;
```
注意.地址可能需要修改。</p>

<h4>第二种：通过命令行安装。</h4>

<p><code>
sudo apt-get install mongodb
</code></p>

<p>该命令会安装以下软件包：</p>

<pre><code>mongodb-clients
mongodb-dev
mongodb-server
mongodb
</code></pre>

<p>安装完成以后会生成以下文件：</p>

<pre><code>数据文件： /var/lib/mongodb
日志文件： /var/log/mongodb/mongodb.log
服务脚本： /etc/init.d/mongodb
配置文件： /etc/mongodb.conf
</code></pre>

<p>如果要修改启动选项可以直接修改这个文件。</p>

<p>安装完成以后会在系统中新建一个用户 mongodb，会用这个用户帐号来启动 MongodDB，</p>

<p>MongodDB默认使用27017端口,通过 <code>netstat -tlunp | grep 27017</code> 可以查看到进程。</p>

<p>如果要以其他用户来运行Mongodb，需要修改 /var/lib/mongodb 和 /var/log/mongodb的权限。</p>

<p>可以通过命令 <code>sudo service mongodb start/stop/restart/status</code> 来控制mongod进程。</p>

<h3>3. 使用</h3>

<p>打开终端，输入 mongo 命令，连接到MongoDB数据库：</p>

<pre><code>╭─# ivan@ubuntu in ~/work ‹ruby-1.8.7@rails304›  
╰─$ mongo
MongoDB shell version: 2.0.4
connecting to: test
&gt; 
</code></pre>

<h3>简单操作命令：</h3>

<ul>
<li>进入数据库 admin：</li>
</ul>


<p><code>use admin</code></p>

<ul>
<li>增加或修改用户密码：</li>
</ul>


<p><code>db.addUser('name','pwd')</code></p>

<ul>
<li>查看用户列表</li>
</ul>


<p><code>db.system.users.find()</code></p>

<ul>
<li>用户认证</li>
</ul>


<p><code>db.auth('name','pwd')</code></p>

<ul>
<li>删除用户</li>
</ul>


<p><code>db.removeUser('name')</code></p>

<ul>
<li>查看所有用户</li>
</ul>


<p><code>show users</code></p>

<ul>
<li>查看所有数据库</li>
</ul>


<p><code>show dbs</code></p>

<ul>
<li>查看所有的 collection</li>
</ul>


<p><code>show collections</code></p>

<ul>
<li>查看各 collection 的状态</li>
</ul>


<p><code>db.printCollectionStats()</code></p>

<ul>
<li>查看主从复制状态</li>
</ul>


<p><code>db.printReplicationInfo()</code></p>

<ul>
<li>修复数据库</li>
</ul>


<p><code>db.repairDatabase()</code></p>

<ul>
<li>设置记录 profiling，0=off 1=slow 2=all</li>
</ul>


<p><code>db.setProfilingLevel(1)</code></p>

<ul>
<li>查看profiling</li>
</ul>


<p><code>show profile</code></p>

<ul>
<li>拷贝数据库</li>
</ul>


<p><code>db.copyDatabase('mail_addr','mail_addr_tmp')</code></p>

<ul>
<li>删除 collection</li>
</ul>


<p><code>db.mail_addr.drop()</code></p>

<ul>
<li>删除当前的数据库</li>
</ul>


<p><code>db.dropDatabase()</code></p>

<h3>增删改</h3>

<ul>
<li>存储嵌套的对象</li>
</ul>


<p><code>
db.foo.save({'name':'ysz','address':{'city':'beijing','post':100096},'phone':[138,139]})
</code></p>

<ul>
<li>存储数组对象</li>
</ul>


<p><code>
db.user_addr.save({'Uid':'yushunzhi@sohu.com','Al':['test-1@sohu.com','test-2@sohu.com']})
</code></p>

<ul>
<li>根据query条件修改，如果不存在则插入，允许修改多条记录</li>
</ul>


<p><code>
db.foo.update({'yy':5},{'$set':{'xx':2}},upsert=true,multi=true)
</code></p>

<ul>
<li>删除yy=5的记录</li>
</ul>


<p><code>
db.foo.remove({'yy':5})
</code></p>

<ul>
<li>删除所有的记录</li>
</ul>


<p><code>
db.foo.remove()
</code></p>

<h3>索引</h3>

<ul>
<li>增加索引：1(ascending),-1(descending)</li>
</ul>


<p><code>
db.foo.ensureIndex({firstname: 1, lastname: 1}, {unique: true});
</code></p>

<ul>
<li>索引子对象</li>
</ul>


<p><code>
db.user_addr.ensureIndex({'Al.Em': 1})
</code></p>

<ul>
<li>查看索引信息</li>
</ul>


<p><code>
db.foo.getIndexes()
db.foo.getIndexKeys()
</code></p>

<ul>
<li>根据索引名删除索引</li>
</ul>


<p><code>
db.user_addr.dropIndex('Al.Em_1')
</code></p>

<h3>查询</h3>

<ul>
<li>查找所有</li>
</ul>


<p><code>
db.foo.find()
</code></p>

<ul>
<li>查找一条记录</li>
</ul>


<p><code>
db.foo.findOne()
</code></p>

<ul>
<li>根据条件检索10条记录</li>
</ul>


<p><code>
db.foo.find({'msg':'Hello 1'}).limit(10)
</code></p>

<ul>
<li>sort排序</li>
</ul>


<p><code>
db.deliver_status.find({'From':'ixigua@sina.com'}).sort({'Dt',-1})
db.deliver_status.find().sort({'Ct':-1}).limit(1)
</code></p>

<ul>
<li>count操作</li>
</ul>


<p><code>
db.user_addr.count()
</code></p>

<ul>
<li>distinct操作,查询指定列，去重复</li>
</ul>


<p><code>
db.foo.distinct('msg')
</code></p>

<ul>
<li>”>=”操作</li>
</ul>


<p><code>
db.foo.find({"timestamp": {"$gte" : 2}})
</code></p>

<ul>
<li>子对象的查找</li>
</ul>


<p><code>
db.foo.find({'address.city':'beijing'})
</code></p>

<h3>管理</h3>

<ul>
<li>查看collection数据的大小</li>
</ul>


<p><code>
db.deliver_status.dataSize()
</code></p>

<ul>
<li>查看colleciont状态</li>
</ul>


<p><code>
db.deliver_status.stats()
</code></p>

<ul>
<li>查询所有索引的大小</li>
</ul>


<p><code>
db.deliver_status.totalIndexSize()
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu12.04 安装 MySQL]]></title>
    <link href="http://duyw.github.io/blog/2013/04/05/ubuntu12-dot-04-an-zhuang-mysql/"/>
    <updated>2013-04-05T20:15:00+08:00</updated>
    <id>http://duyw.github.io/blog/2013/04/05/ubuntu12-dot-04-an-zhuang-mysql</id>
    <content type="html"><![CDATA[<h3>第一步：卸载mysql</h3>

<p><code>
sudo apt-get autoremove --purge mysql-server-5.0
sudo apt-get remove mysql-server
sudo apt-get autoremove mysql-server
sudo apt-get remove mysql-common (非常重要)
</code></p>

<h3>第二步：清理残留数据</h3>

<p><code>
dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P
</code></p>

<h3>第三步：安装 mysql</h3>

<p><code>
sudo apt-get install mysql-server
sudo apt-get install mysql-client
sudo apt-get install php5-mysql(安装php5-mysql 是将php和mysql连接起来 )
</code></p>

<p>一旦安装完成，MySQL 服务器应该自动启动。您可以在终端提示符后运行以下命令来检查 MySQL 服务器是否正在运行：</p>

<p><code>
sudo netstat -tap | grep mysql
</code></p>

<p>当您运行该命令时，您可以看到类似下面的行：</p>

<p><code>
tcp 0 0 localhost.localdomain:mysql *:* LISTEN -
</code></p>

<p>如果服务器不能正常运行，您可以通过下列命令启动它：</p>

<p><code>
sudo /etc/init.d/mysql restart
</code></p>

<h3>第四步：配置管理员密码</h3>

<p>进入mysql</p>

<p><code>
$mysql -uroot -p 管理员密码
</code></p>

<p>配置 MySQL 的管理员密码：</p>

<p><code>
sudo mysqladmin -u root password newpassword
</code></p>
]]></content>
  </entry>
  
</feed>
