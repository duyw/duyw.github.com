<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | 杜永文 博客]]></title>
  <link href="http://duyw.github.com/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://duyw.github.com/"/>
  <updated>2013-04-05T21:47:12+08:00</updated>
  <id>http://duyw.github.com/</id>
  <author>
    <name><![CDATA[Du Yongwen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ubuntu12.04下 SVN 安装和配置]]></title>
    <link href="http://duyw.github.com/blog/2013/04/05/ubuntu12-dot-04xia-svn-an-zhuang-he-pei-zhi/"/>
    <updated>2013-04-05T20:30:00+08:00</updated>
    <id>http://duyw.github.com/blog/2013/04/05/ubuntu12-dot-04xia-svn-an-zhuang-he-pei-zhi</id>
    <content type="html"><![CDATA[<h3>1. 安装</h3>

<p><code>
sudo apt-get install subversion
</code></p>

<h3>2. 将最新版本文件签出到本地</h3>

<p><code>
svn checkout repository_path local_path --username 用户名  --password 密码
</code></p>

<p>例如：</p>

<p><code>
$ svn checkout svn://192.168.1.1/pro  --username 用户名 --password 密码
</code></p>

<p><code>
$ svn checkout http://192.168.1.1/pro --username 用户名 --password 密码
</code></p>

<p>简写：<code>$ svn co svn://192.168.1.1/pro</code>或者 <code>$ svn co http://192.168.1.1/pro</code></p>

<p>注：--password 参数传输密码的话，会提示输入密码。local_path  参数如果为空的话，会签出到当前目录。</p>

<h3>3. 导出(导出一个干净的不带.svn文件夹的目录树)</h3>

<p><code>
svn export [-r 版本号] http://路径(目录或文件的全路径) [本地目录全路径] --username 用户名
svn export [-r 版本号] svn://路径(目录或文件的全路径)  [本地目录全路径] --username 用户名
svn export 本地检出的(即带有.svn文件夹的)目录全路径  要导出的本地目录全路径
</code></p>

<p>例子：</p>

<p><code>
svn export svn://192.168.0.3/测试工具 /home/testtools --username ivan
svn export http://192.168.0.3/test/testapp --username ivan
svn export /home/testapp /home/testtools
</code></p>

<p>注：</p>

<p>第一种从版本库导出干净工作目录树的形式是指定URL，如果指定了修订版本号，会导出相应的版本，如果没有指定修订版本，则会导出最新的，导出到指定位置。</p>

<p>如果省略 本地目录全路径，URL的最后一部分会作为本地目录的名字。</p>

<p>第二种形式是指定 本地检出的目录全路径 到 要导出的本地目录全路径，所有的本地修改将会保留，但是不在版本控制下(即没提交的新文件，因为.svn文件夹里没有与之相关的信息记录)的文件不会拷贝。</p>

<h3>4. 往版本库中添加新的文件</h3>

<p><code>$ svn add file</code> 告诉SVN服务器要添加文件了，还要用<code>svn commint -m</code>真实的上传上去！</p>

<p>例如：</p>

<p><code>
$ svn add test.php   #(添加test.php)   
$ svn add *.php      #(添加当前目录下所有的php文件)
</code></p>

<h3>5. 提交</h3>

<p><code>
svn commit -m “提交备注信息文本“ [-N] [--no-unlock] 文件名
svn ci     -m “提交备注信息文本“ [-N] [--no-unlock] 文件名
</code></p>

<p>必须带上-m参数，参数可以为空，但是必须写上-m</p>

<p>例子：</p>

<p><code>
svn commit -m “提交当前目录下的全部在版本控制下的文件“ *    #注意这个*表示全部文件
svn commit -m “提交我的测试用test.php“ test.php
svn commit -m “提交我的测试用test.php“ -N --no-unlock test.php    #保持锁就用–no-unlock开关
</code></p>

<p><code>
svn ci -m “提交当前目录下的全部在版本控制下的文件“ *    #注意这个*表示全部文件
svn ci -m “提交我的测试用test.php“ test.php
svn ci -m “提交我的测试用test.php“ -N --no-unlock test.php    #保持锁就用–no-unlock开关
</code></p>

<h3>6. 更新文件</h3>

<p><code>
svn update
svn update -r 修正版本 文件名
svn update 文件名
</code></p>

<p>例子：</p>

<p><code>
svn update                    # 后面没有目录，默认将当前目录以及子目录下的所有文件都更新到最新版本
svn update -r 200 test.cpp    # 将版本库中的文件 test.cpp 还原到修正版本（revision）200
svn update test.php           # 更新与版本库同步。
</code>
注：提交的时候提示过期冲突，需要先 update 修改文件，然后清除 svn resolved，最后再commit。</p>

<h3>7. 删除文件</h3>

<p><code>
svn delete svn://路径(目录或文件的全路径) -m “删除备注信息文本”
</code></p>

<p>推荐如下操作：</p>

<p><code>
svn delete 文件名  svn ci -m “删除备注信息文本”
</code></p>

<p>例子：</p>

<p><code>
svn delete svn://192.168.1.1/testapp/test.php -m “删除测试文件test.php”
</code></p>

<p>推荐如下操作：</p>

<p><code>
svn delete test.php  svn ci -m “删除测试文件test.php”
</code></p>

<h3>8. 加锁/解锁</h3>

<p><code>
svn lock -m “加锁备注信息文本“ [--force] 文件名  
svn unlock 文件名
</code></p>

<p>例子：</p>

<p><code>
svn lock -m “锁信测试用test.php文件“ test.php  
svn unlock test.php
</code></p>

<h3>9. 比较差异</h3>

<p><code>
svn diff 文件名  
svn diff -r 修正版本号m:修正版本号n 文件名
</code></p>

<p>例子：</p>

<p><code>
svn diff test.php              # 将修改的文件与基础版本比较
svn diff -r 200:201 test.php   # 对 修正版本号200 和 修正版本号201 比较差异
</code></p>

<h3>10. 查看文件或者目录状态</h3>

<p><code>
svn st     目录路径/名
svn status 目录路径/名   #目录下的文件和子目录的状态，正常状态不显示
</code></p>

<p>说明：  ?：不在svn的控制中；  M：内容被修改；C：发生冲突； A：预定加入到版本库；K：被锁定</p>

<p><code>
svn  -v 目录路径/名
svn status -v 目录路径/名    #显示文件和子目录状态
</code></p>

<p>说明：第一列保持相同，第二列显示工作版本号，第三和第四列显示最后一次修改的版本号和修改人</p>

<p>注：
svn status、svn diff 和 svn revert 这三条命令在没有网络的情况下也可以执行的，原因是svn在本地的.svn中保留了本地版本的原始拷贝（但不是所有历史版本的拷贝，这点和GIT是不同的）。</p>

<h3>11. 查看日志</h3>

<p><code>
svn log 文件名
</code></p>

<p>例子：</p>

<p><code>
svn log test.php  #显示这个文件的所有修改记录，及其版本号的变化
</code></p>

<h3>12. 查看文件详细信息</h3>

<p><code>
svn info 文件名
</code></p>

<p>例子：</p>

<p><code>
svn info test.php
</code></p>

<h3>13. SVN 帮助</h3>

<p><code>
svn help          # 全部功能选项
svn help ci      # 具体功能的说明
</code></p>

<h3>14. 查看版本库下的文件和目录列表</h3>

<p><code>
svn list svn://路径(目录或文件的全路径)
svn ls   svn://路径(目录或文件的全路径)
</code></p>

<p>例子：</p>

<p><code>
svn list svn://192.168.0.3/test
svn ls   svn://192.168.0.3/test   # 显示svn://192.168.0.3/test目录下的所有属于版本库的文件和目录
</code></p>

<h3>15. 创建纳入版本控制下的新目录</h3>

<p><code>
svn mkdir 目录名
svn mkdir -m "新增目录备注文本" http://目录全路径
</code></p>

<p>例子：</p>

<p><code>
svn mkdir newdir
svn mkdir -m "Making a new dir." http://192.168.0.3/test/newdir  
</code></p>

<p>注：添加完子目录后，一定要回到根目录更新一下，不然在该目录下提交文件会提示“提交失败”</p>

<p><code>
svn update
</code></p>

<p>注：如果手工在checkout出来的目录里创建了一个新文件夹newsubdir，再用svn mkdir newsubdir命令后，SVN会提示：</p>

<pre><code>svn: 尝试用 “svn add”或 “svn add --non-recursive”代替？
svn: 无法创建目录“hello”: 文件已经存在
</code></pre>

<p>此时，用如下命令解决：<code>svn add --non-recursive newsubdir</code></p>

<p>再次进入这个newsubdir文件夹，用<code>ls -a</code>查看它下面的全部目录与文件，会发现多了：.svn目录</p>

<p>再用 <code>svn mkdir -m "添hello功能模块文件" svn://192.168.0.3/test/newdir/newsubdir</code> 命令，SVN提示：</p>

<pre><code>svn: File already exists: filesystem '/data/svnroot/test/db', transaction '4541-1',
path '/newdir/newsubdir '
</code></pre>

<h3>16. 恢复本地修改</h3>

<p><code>
svn revert [--recursive] 文件名
</code></p>

<p>注意: 本子命令不会存取网络，并且会解除冲突的状况。但是它不会恢复被删除的目录。</p>

<p>例子：</p>

<p><code>
svn revert foo.c            # 丢弃对一个文件的修改
svn revert --recursive .    # 恢复一整个目录的文件，. 为当前目录
</code></p>

<h3>17. 把工作拷贝更新到别的URL</h3>

<p><code>
svn switch http://目录全路径 本地目录全路径
</code></p>

<p>例子：</p>

<p><code>
svn switch http://192.163.0.3/test/456 . #(原为123的分支)当前所在目录分支到192.163.0.3/test/456
</code></p>

<h3>18. 解决冲突</h3>

<p><code>
svn resolved [本地目录全路径]
</code></p>

<p>例子：</p>

<p><code>
$ svn update
C foo.c
Updated to revision 31.
</code></p>

<p>如果你在更新时得到冲突，你的工作拷贝会产生三个新的文件：</p>

<p><code>  
$ ls
foo.c
foo.c.mine
foo.c.r30
foo.c.r31
</code></p>

<p>当你解决了foo.c的冲突，并且准备提交，运行svn resolved让你的工作拷贝知道你已经完成了所有事情。 你可以仅仅删除冲突的文件并且提交，但是svn resolved除了删除冲突文件，还修正了一些记录在工作拷贝管理区域的记录数据，所以我们推荐你使用这个命令。</p>

<h3>19. 不checkout而查看输出特定文件或URL的内容</h3>

<p><code>
svn cat http://文件全路径
</code></p>

<p>例子： <code>svn cat http://192.168.0.3/test/readme.txt</code></p>

<p>另外，在Linxu下，可视化SVN客户端可以用 Rabbitvcs 。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu12.04 安装 MySQL]]></title>
    <link href="http://duyw.github.com/blog/2013/04/05/ubuntu12-dot-04-an-zhuang-mysql/"/>
    <updated>2013-04-05T20:15:00+08:00</updated>
    <id>http://duyw.github.com/blog/2013/04/05/ubuntu12-dot-04-an-zhuang-mysql</id>
    <content type="html"><![CDATA[<h3>第一步：卸载mysql</h3>

<p><code>
sudo apt-get autoremove --purge mysql-server-5.0
sudo apt-get remove mysql-server
sudo apt-get autoremove mysql-server
sudo apt-get remove mysql-common (非常重要)
</code></p>

<h3>第二步：清理残留数据</h3>

<p><code>
dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P
</code></p>

<h3>第三步：安装 mysql</h3>

<p><code>
sudo apt-get install mysql-server
sudo apt-get install mysql-client
sudo apt-get install php5-mysql(安装php5-mysql 是将php和mysql连接起来 )
</code></p>

<p>一旦安装完成，MySQL 服务器应该自动启动。您可以在终端提示符后运行以下命令来检查 MySQL 服务器是否正在运行：</p>

<p><code>
sudo netstat -tap | grep mysql
</code></p>

<p>当您运行该命令时，您可以看到类似下面的行：</p>

<p><code>
tcp 0 0 localhost.localdomain:mysql *:* LISTEN -
</code></p>

<p>如果服务器不能正常运行，您可以通过下列命令启动它：</p>

<p><code>
sudo /etc/init.d/mysql restart
</code></p>

<h3>第四步：配置管理员密码</h3>

<p>进入mysql</p>

<p><code>
$mysql -uroot -p 管理员密码
</code></p>

<p>配置 MySQL 的管理员密码：</p>

<p><code>
sudo mysqladmin -u root password newpassword
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu12.04 安装 Sublime Text 2 ]]></title>
    <link href="http://duyw.github.com/blog/2013/04/04/ubuntu12-dot-04-an-zhuang-sublime-text-2/"/>
    <updated>2013-04-04T22:41:00+08:00</updated>
    <id>http://duyw.github.com/blog/2013/04/04/ubuntu12-dot-04-an-zhuang-sublime-text-2</id>
    <content type="html"><![CDATA[<p>Sublime Text 2 是一款非常优秀的编辑器，可以媲美苹果系统下的TextMate，用Sublime Text 2 进行RoR开发是一件很惬意的事，在Ubuntu12.04系统下安装步骤如下：</p>

<ol>
<li><p>到<a href="http://www.sublimetext.com/2">官网</a>下载软件包： “Sublime Text 2.0.1.tar.bz2”。</p></li>
<li><p>复制到安装目录。</p></li>
<li><p>解压缩。</p></li>
<li><p>进入目录，创建desktop文件（sublime-text.desktop），并赋予可执行权限，启动sublime text 2 就直接运行该文件，这样就可以锁定在启动器，内容如下：</p>

<pre><code> #!/usr/bin/env xdg-open

 [Desktop Entry]
 Name=Sublime Text 2
 Comment=Sublime Text 2
 Exec=/home/ivan/apps/"Sublime Text 2"/sublime_text
 Icon=/home/ivan/apps/Sublime Text 2/Icon/256x256/sublime_text.png
 Terminal=false
 Type=Application
 Categories=Application;Development;
 StartupNotify=true
 Name[zh_CN]=sublime-text
</code></pre>

<p> 如果将文件复制到<code>/usr/share/applications/</code>目录下，就可以在Dash中被搜索到。</p></li>
<li><p>破解：</p>

<p> 首先备份安装目录下的sublime_text文件<code>cp sublime_text sublime_text.bak</code></p>

<p> 使用vim打开：<code>vim sublime_text</code> (如果没有安装vim，可以通过命令<code>sudo apt-get install vim</code>安装。)</p>

<p> 将文件转化成16进制,在vim中输入：<code>:%!xxd</code></p>

<p> 查找要修改的地方,在vim中输入： <code>/4333 3342</code></p>

<p> 将3342修改为3242</p>

<p> 将文件转换回去,在vim中输入： <code>:%!xxd -r</code></p>

<p> 保存文件、退出,在vim中输入： <code>:wq</code></p>

<p> 打开sublime text 2 编辑器，将下面的Licence填入即可大功告成：</p>

<pre><code> —–BEGIN LICENSE—–
 China
 Unlimited User License
 EA7E-2861
 BE67D2175D3569FDAB9EB5340FAD2822
 E7B56B3397A76AA9FBE8AC3D3C65918B
 DFC28F2EA158140D9E07853D594818EB
 3A237B2E8E98ED257C269548F50EDA34
 EF0C7F72D8917DB538A0245E46BFD6B1
 85F4EDE331F253530ED67A5C19E92399
 04C5F4A1AF4AF3DB5EC49C1FEE17CA76
 7E369F8AAE4AC6C6E756B5882E1608B9
 —–END LICENSE—–
</code></pre></li>
<li><p>创建链接，这样就可以直接在命令行中通过 sub 命令启动</p>

<p> <code>sudo ln -s /home/ivan/apps/Sublime\ Text\ 2/sublime_text /usr/bin/sub</code></p></li>
<li><p>安装插件安装管理工具“package control”</p>

<p> 打开 Sublime Text 2，按下 Control + ` 调出 Console，输入以下内容，回车执行：</p>

<pre><code> import urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();os.makedirs(ipp) if not os.path.exists(ipp) else None;open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())
</code></pre></li>
<li><p>解决ubuntu12.04系统下中文输入问题：</p>

<p> 需要通过安装InputHelper插件来实现中文输入：</p>

<p> <code>cd ~/.config/sublime-text-2/Packages/</code></p>

<p> <code>git clone https://github.com/xgenvn/InputHelper.git</code></p>

<p> 也可以通过 package control 来安装.</p>

<p> 使用方法：重启 Sublime Text 2 ,通过快捷键 Shift ＋ Ctrl ＋ Z 来呼出输入窗口，可在其中输入汉字，输入完成直接回车即可。</p></li>
<li><p>相关插件介绍</p>

<p> 待续...</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu12.04 安装 JDK]]></title>
    <link href="http://duyw.github.com/blog/2013/04/04/ubuntu12-dot-04an-zhuang-jdk/"/>
    <updated>2013-04-04T22:30:00+08:00</updated>
    <id>http://duyw.github.com/blog/2013/04/04/ubuntu12-dot-04an-zhuang-jdk</id>
    <content type="html"><![CDATA[<p>很多软件运行需要JRE环境，下面的方法用于在Ubuntu中安装JDK：</p>

<ol>
<li><p>首先下载JDK，点击<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk6downloads-1902814.html">这里</a>下载（以“jdk-6u26-linux-i586.bin”为例）下载好以后放到安装位置（以<code>~/apps</code>目录为例）。</p></li>
<li><p>设置安装文件权限： <code>chmod u+x ./jdk-6u26-linux-i586.bin</code></p></li>
<li><p>安装：<code>sudo -s ./jdk-6u26-linux-i586.bin</code></p></li>
<li><p>配置环境变量：</p>

<p> <code>sudo gedit /etc/profile</code></p>

<p> 在文件末尾写入以下内容：</p>

<pre><code> #set java environment    

 JAVA_HOME=/home/ivan/apps/jdk1.6.0_26   

 export JRE_HOME=/home/ivan/apps/jdk1.6.0_26/jre   

 export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH   

 export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 

 #set java environment
</code></pre></li>
<li><p>测试：</p>

<p> 重启terminal,执行： <code>java -version</code> ，输出版本信息，说明安装成功。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu12.04 安装 PostgreSQL 和 PgAdmin3]]></title>
    <link href="http://duyw.github.com/blog/2013/04/04/ubuntu12-dot-04-an-zhuang-postgresqlhe-pgadmin3/"/>
    <updated>2013-04-04T19:33:00+08:00</updated>
    <id>http://duyw.github.com/blog/2013/04/04/ubuntu12-dot-04-an-zhuang-postgresqlhe-pgadmin3</id>
    <content type="html"><![CDATA[<h3>1.安装</h3>

<p>安装：<code>sudo apt-get install postgresql postgresql-client postgresql-server-dev-all</code></p>

<p>或者指定版本号：</p>

<pre><code>sudo apt-get install -y postgresql-9.1 postgresql-client-9.1 postgresql-contrib-9.1 \
postgresql-server-dev-9.1
</code></pre>

<p>启动：<code>sudo /etc/init.d/postgresql start</code></p>

<p>停止：<code>sudo /etc/init.d/postgresql stop</code></p>

<p>重启：<code>sudo /etc/init.d/postgresql restart</code></p>

<p>察看状态：<code>sudo /etc/init.d/postgresql status</code></p>

<p>另外，也可以使用命令：<code>sudo service postgresql  [start/stop/restart/status]</code></p>

<p>以上命令将把PostgreSQL安装到以下目录：</p>

<pre><code>/usr/lib/postgresql/9.1/        存放postgresql相关的二进制文件
/usr/lib/postgresql/9.1/bin/    可执行文件 
/usr/lib/postgresql/9.1/lib/    共享库文件 
/etc/postgres/9.1/main/         存放postgresql配置文文件 
/var/lib/postgresql/            postgres用户的主文件夹
</code></pre>

<!-- more -->


<h3>2.配置管理员“postgres”，使用psql</h3>

<p>PostgreSQL数据默认会创建一个linux用户postgres，需要修改操作系统“postgres”用户的密码为“postgres”：</p>

<ol>
<li><p>删除密码：<code>sudo passwd -d postgres  //passwd -d 是清空指定用户密码的意思</code></p></li>
<li><p>设置密码：<code>sudo -u postgres passwd  //或者 sudo su postgres -c passwd</code></p></li>
</ol>


<p>用sudo权限以用户postgres身份登陆PostgreSQL:</p>

<pre><code>sudo -u postgres psql [ -U postgres -h 127.0.0.1]   
// 运行psql,后面[]中的内容可选，用于登录服务器，默认会登录本机；
</code></pre>

<p>或者：</p>

<p><code>sudo su postgres -c psql template1（PostgreSQL的默认数据库是template1）</code></p>

<p>运行 PostgreSQL 交互的终端程序， 叫 psql，它允许你交互地输入，编辑，和执行 SQL 命令。</p>

<p>启动 psql：<code>psql mydb</code>（以用户postgres登陆psql：<code>sudo su postgres -c psql</code>）</p>

<p>在 psql 里输入help命令，你会看到下面的提示信息：</p>

<pre><code>You are using psql, the command-line interface to PostgreSQL.
Type:  \copyright for distribution terms
          \h for help with SQL commands
          \? for help with psql commands
          \g or terminate with semicolon to execute query
          \q to quit
</code></pre>

<p>修改PostgreSQL的管理员用户postgres的密码为“postgres”（同操作系统用户postgres的密码一样）：</p>

<p><code>postgres=# ALTER USER postgres WITH PASSWORD 'postgres';</code></p>

<p>查询当前使用的postgresql版本：<code>SELECT version()；</code></p>

<p>查询大概年前日期：            <code>SELECT current_date;</code></p>

<p>现在，我们就可以在数据库服务器上用 postgres帐号通过psql或者pgAdmin等等客户端操作数据库了
（暂时还不能远程访问）。</p>

<h3>3.管理PostgreSQL用户</h3>

<p>1 创建新用户pgsql，但不给建数据库的权限，有两中创建方式：</p>

<p><strong>一种是在外部命令行直接创建：</strong></p>

<p>  命令：<code>createuser [-a] [-A] [-d] [-D] [-e] [-P] [-h 主机名] [-p port] 用户名</code></p>

<pre><code>参数说明：
[-a]：允许创建其他用户，相当于创建一个超级用户；
[-A]：不允许此用户创建其他用户；
[-d]：允许此用户创建数据库；
[-D]：不允许此用户创建数据库；
[-e]：将执行过程显示到Shell上；
[-P]：创建用户时，同时设置密码；
[-h 主机名]：为某个主机上的Postgres创建用户；
[-p port]：与-h参数一同使用，指定主机的端口。
</code></pre>

<p>例如：</p>

<p><code>ivan@ubuntu:~$ sudo -u postgres createuser -D -P pgsql</code></p>

<p>执行以后会看到如下提示：</p>

<pre><code>Enter password for new role: 
Enter it again: 
Shall the new role be a superuser? (y/n) n
Shall the new role be allowed to create more new roles? (y/n) n
</code></pre>

<p><strong>另一种方式是登陆psql，通过SQL语句创建：</strong></p>

<p>首先登陆：</p>

<p><code>ivan@ubuntu:~$ psql -U postgres -h 127.0.0.1</code></p>

<p>然后创建：</p>

<pre><code>postgres=# create user “pgsql” with password ‘123456’ nocreatedb; 
//用户名和数据库名称加上引号后才区分大小写，否则会自动转换成小写
</code></pre>

<p>2 删除用户：</p>

<p>外部：<code>sudo -u postgres dropuser pgsql</code></p>

<p>内部：``</p>

<h3>4.创建和删除数据库</h3>

<p>同样有外部命令行和psql的SQL语句这两种创建方式。</p>

<p>创建数据库 mydb, 其拥有者是pgsql用户：</p>

<p>1  通过命令行创建（shell命令）：</p>

<p>创建数据库：<code>sudo -u postgres createdb mydb -O pgsql   // -O 设定所有者pgsql；</code></p>

<p>删除数据库：<code>sudo -u postgres dropdb   mydb</code></p>

<p>2  通过psql来创建(sql命令)：</p>

<p>首先利用psql登录PostgreSQL服务器:</p>

<pre><code>sudo -u postgres psql [ -U postgres -h 127.0.0.1]  
//运行psql,后面[]中的内容可选，用于登录服务器，默认会登录本机；`
</code></pre>

<p>然后在psql程序中创建数据库（需要先创建好pgsql用户）:</p>

<p><code>create database “mydatabase” with owner=pgsql;</code></p>

<h3>5.数据库导入导出</h3>

<p><strong>导出：</strong>取得服务器 192.168.1.1 上 PostgreSQL中pgsql用户的mydb数据库，导出到当前目录下的 mydb.dump 文件：</p>

<p><code>pg_dump -h 192.168.1.1 -U pgsql -Fc mydb &gt; mydb.dump</code></p>

<p><strong>导入：</strong>将导出的文件 mydb.dump 导入到本地PostgreSQL数据库中pgsql用户下(需要提前创建pgsql用户），要求导入后的数据库名称为“mydb”</p>

<p><code>pg_restore ./mydb.dump | psql -Upgsql -d mydb</code></p>

<h3>6.修改PostgresSQL数据库配置实现远程访问</h3>

<p><code>ivan@ubuntu:~$ sudo vim /etc/postgresql/9.1/main/postgresql.conf</code></p>

<p>1.监听任何地址访问，修改连接权限</p>

<p><code>#listen_addresses = ‘localhost’  改为 listen_addresses = ‘*’</code></p>

<p>2.启用密码验证</p>

<p><code>#password_encryption = on      改为   password_encryption = on</code></p>

<p>3.可访问的用户ip段</p>

<p><code>ivan@ubuntu:~$ sudo vim /etc/postgresql/9.1/main/pg_hba.conf</code></p>

<p>并在文档末尾加上以下内容</p>

<pre><code># to allow your client visiting postgresql server
host all all 0.0.0.0 0.0.0.0 md5
</code></pre>

<p>解释一下最后一行：</p>

<pre><code>host表示允许的类型是主机； 
第一个all是允许的数据库名字； 
第二个all是允许的用户； 
第一个0.0.0.0是允许访问的ip address； 
第二个0.0.0.0是允许访问的subnet mask； 
最后的md5表示密码的加密方式，如果将md5改成trust则可以让指定范围的主机数据库的时候不需要提供密码。
关于 ip address 和 subnet mask ，你也可以修改为你的机器IP地址(如10.13.19.53)和子网掩码(如 255.255.255.255)，
这样就只有你自己的主机可以远程访问数据库了。 如果要使用一个IP地址范围，只需要把子网掩码设置成合适的值，
如果子网掩码设置成0.0.0.0，则所有主机均可以访问数据库（IP可以任意设定），
如果将md5改成trust则可以让指定范围的主机访问指定的数据库的时候不需要提供密码。
</code></pre>

<p>4.重启PostgreSQL数据库</p>

<p><code>ivan@ubuntu:~$ sudo /etc/init.d/postgresql restart</code></p>

<h3>7.安装postgresql数据库pgAdmin3客户端管理程序</h3>

<p><code>ivan@ubuntu:~$ sudo apt-get install -y pgadmin3</code></p>

<p>遇到问题：</p>

<p>1 安装过程中总是下载不了要安装的文件，更新源添加163源都无法解决，最后通过vpn翻墙以后可以正常安装。</p>

<p>2 安装以后pgAdmin3固定到启动器后不显示图标，解决方法，修改/usr/share/applications目录下的 pgAdmin III.desktop文件，将其中的 Icon值改为“/usr/share/pixmaps/pgadmin3.svg”，搞定。</p>
]]></content>
  </entry>
  
</feed>
